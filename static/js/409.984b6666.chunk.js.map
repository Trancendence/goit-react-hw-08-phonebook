{"version":3,"file":"static/js/409.984b6666.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\n\nexport const selectVisibleContacts = createSelector(\n    [selectContacts, selectFilter],\n    (contacts, filter) => {\n      if (!contacts) return;\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      );\n    }\n  );\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { addContact } from '../../redux/contacts/operations.js';\nimport { selectContacts } from '../../redux/contacts/selectors.js';\n\nimport { Box, Button } from '@mui/material';\nimport TextField from '@mui/material/TextField';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const inputChange = event => {\n    switch (event.target.name) {\n      case 'name':\n        setName(event.target.value);\n        break;\n      case 'number':\n        setNumber(event.target.value);\n        break;\n      default:\n        console.log('er');\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const isContactRepeat = contacts.find(el => el.name === name);\n\n    if (isContactRepeat) {\n      alert('Already in Contacts');\n      return;\n    }\n    const contact = {\n      name,\n      number,\n    };\n\n    dispatch(addContact(contact));\n\n    event.target.reset();\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      autoComplete=\"off\"\n      onSubmit={handleSubmit}\n      sx={{\n        paddingBottom: '20px',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        gap: '10px',\n      }}\n    >\n      <TextField\n        sx={{ width: 400 }}\n        id=\"filled-basic\"\n        label=\"Name\"\n        variant=\"filled\"\n        type=\"text\"\n        name=\"name\"\n        onChange={inputChange}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n\n      <TextField\n        sx={{ width: 400 }}\n        id=\"filled-basic\"\n        label=\"Number\"\n        variant=\"filled\"\n        type=\"number\"\n        name=\"number\"\n        onChange={inputChange}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n\n      <Button\n        sx={{\n          height: 45,\n          width: 140,\n          mt: '20px',\n          color: 'white',\n          backgroundColor: '#006064',\n          borderRadius: '15px',\n\n          '&:hover:not(.active)': {\n            color: '#84ffff',\n            backgroundColor: '#006064',\n          },\n        }}\n        type=\"submit\"\n        variant=\"contained\"\n      >\n        Add contact\n      </Button>\n    </Box>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/operations.js';\nimport { selectVisibleContacts } from 'redux/contacts/selectors.js';\nimport { Box, Button } from '@mui/material';\n\nexport const ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n  console.log(visibleContacts);\n\n  return (\n    <Box\n      sx={{\n        marginBottom: '50px',\n        marginTop: '10px',\n        gap: '5px',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      {visibleContacts.map(({ name, number, id }) => (\n        <Box\n          sx={{\n            width: '85%',\n\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginBottom: '0px',\n            marginTop: '0px',\n            fontWeight: 500,\n          }}\n          key={id}\n        >\n          <p>{name}:</p> <p>{number}</p>\n          <Button\n            sx={{\n              height: 30,\n              width: 100,\n              paddingBottom: '20px',\n              paddingTop: '20px',\n\n              color: 'white',\n              backgroundColor: '#006064',\n              borderRadius: '15px',\n\n              '&:hover:not(.active)': {\n                color: '#84ffff',\n                backgroundColor: '#006064',\n              },\n            }}\n            type=\"button\"\n            onClick={() => dispatch(deleteContact(id))}\n          >\n            Delete\n          </Button>\n        </Box>\n      ))}\n    </Box>\n  );\n};","import { useDispatch, useSelector } from 'react-redux';\nimport { filterContact } from '../../redux/contacts/filterSlice.js';\nimport TextField from '@mui/material/TextField';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(state => state.filter);\n\n  return (\n    <>\n      <TextField\n        sx={{ width: 400 }}\n        id=\"filled-basic\"\n        label=\"Contacts\"\n        variant=\"filled\"\n        type=\"text\"\n        value={filterValue}\n        onChange={e => {\n          const action = filterContact(e.target.value);\n          dispatch(action);\n        }}\n      />\n    </>\n  );\n};","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport { ContactForm } from 'components/ContactForm/ContactForm.jsx';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\n\nimport { fetchContacts } from 'redux/contacts/operations.js';\nimport { selectIsLoading } from 'redux/contacts/selectors.js';\nimport { selectError } from 'redux/contacts/selectors.js';\nimport { Box } from '@mui/material';\n\nexport default function Contacts() {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        paddingTop: '40px',\n        paddingBottom: '40px',\n      }}\n    >\n      {error && <p>{error}</p>}\n\n      {isLoading ? (\n        <p\n          style={{\n            fontSize: '48px',\n            textAlign: 'center',\n          }}\n        >\n          Wait a little...{' '}\n        </p>\n      ) : (\n        <Box\n          sx={{\n            width: 480,\n            padding: '12px 16px',\n            borderRadius: 20,\n\n            color: 'black',\n            textAlign: 'center',\n\n            '&:hover': {\n              boxShadow: '0px 0px 20px #006064',\n            },\n          }}\n        >\n          <h1>Phonebook</h1>\n          <ContactForm />\n\n          <h2>Find contacts by name</h2>\n          <Filter />\n\n          <ContactList />\n        </Box>\n      )}\n    </div>\n  );\n}"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","filter","contact","toLowerCase","includes","ContactForm","useSelector","dispatch","useDispatch","useState","setName","number","setNumber","inputChange","event","target","console","log","Box","component","autoComplete","onSubmit","preventDefault","el","alert","addContact","reset","sx","paddingBottom","display","flexDirection","justifyContent","alignItems","gap","TextField","width","id","label","variant","type","onChange","pattern","title","required","Button","height","mt","color","backgroundColor","borderRadius","ContactList","visibleContacts","marginBottom","marginTop","flexWrap","fontWeight","paddingTop","onClick","deleteContact","Filter","filterValue","e","action","filterContact","Contacts","useEffect","fetchContacts","style","fontSize","textAlign","padding","boxShadow"],"sourceRoot":""}